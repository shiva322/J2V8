name: Build J2V8 v8 upgrade

on: [push]

jobs:
  build_j2v8_linux_x86_64:
    name: V8 8.1.307.32 build for Linux x64
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: check build dependencies
      run: |
        python --version
        git --version
        docker --version
    
    - name: Build J2V8 for Linux x86_64
      run: |
        mkdir -p v8build
        cd v8build
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH=$GITHUB_WORKSPACE/v8build/depot_tools:"$PATH" 
        echo $PATH

        fetch v8
        echo "target_os= ['linux']">>.gclient
        gclient sync

        cd v8

        git checkout 8.1.307.32
        ./tools/dev/v8gen.py x64.release -vv
        
        rm out.gn/x64.release/args.gn
        cp $GITHUB_WORKSPACE/v8/linux-x64/args.gn out.gn/x64.release/args.gn
        ls -al out.gn/x64.release/
        cat out.gn/x64.release/args.gn
        sleep 1m
        touch out.gn/x64.release/args.gn
        ls -al out.gn/x64.release/

        ninja -C out.gn/x64.release -t clean
        ninja -C out.gn/x64.release v8_monolith

        mkdir -p $GITHUB_WORKSPACE/v8.out/linux.x64
        cp out.gn/x64.release/obj/libv8_monolith.a $GITHUB_WORKSPACE/v8.out/linux.x64

        cd $GITHUB_WORKSPACE
        cp -R v8build/v8/include v8.out/
        python build.py -t linux -a x64 --docker j2v8cmake j2v8jni j2v8cpp j2v8optimize j2v8java j2v8test
    - name: Archive J2V8 jar
      uses: actions/upload-artifact@v1.0.0
      with:
        name: j2v8-linux-x86_64
        path: build.out/j2v8_linux_x86_64-6.3.0-SNAPSHOT.jar
  
  
